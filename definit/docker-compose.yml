#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  basic:

services:
  ca.initial.com:
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "7054:7054"
    #command: sh -c 'fabric-ca-server start --ca.keyfile /etc/hyperledger/fabric-ca-server-config/$CA1_PRIVATE_KEY'
    #command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.initial.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-initial-config/$CA1_PRIVATE_KEY -b admin:adminpw --cfg.affiliations.allowremove --cfg.identities.allowremove -d'
    command: sh -c 'fabric-ca-server start'
    volumes:
      - ./crypto-config/peerOrganizations/org1.initial.com/ca/:/etc/hyperledger/fabric-ca-server-config/
      - ./fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
      - ./crypto-config/peerOrganizations/org1.initial.com/tlsca/tlsca.org1.initial.com-cert.pem:/etc/hyperledger/fabric-ca-server-config/client/tlsca.org1.initial.com-cert.pem
      - ./crypto-config/peerOrganizations/org1.initial.com/users/Admin@org1.initial.com/tls/:/etc/hyperledger/fabric-ca-server-config/client/
      - ./crypto-config/peerOrganizations/org1.initial.com/users/Admin@org1.initial.com/msp/signcerts/Admin@org1.initial.com-cert.pem:/etc/hyperledger/fabric-ca-server-config/client/Admin@org1.initial.com-cert.pem
    container_name: ca.initial.com
    networks:
      - basic

  orderer0.initial.com:
    container_name: orderer0.initial.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/msp/orderer/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      #- ORDERER_GENERAL_TLS_ENABLED=false
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./channel-artifacts/genesis.block:/etc/hyperledger/msp/orderer/genesis.block
        - ./crypto-config/ordererOrganizations/initial.com/orderers/orderer0.initial.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/:/etc/hyperledger/msp/peerOrg1
    networks:
      - basic

  # orderer1.initial.com:
  #   container_name: orderer1.initial.com
  #   image: hyperledger/fabric-orderer
  #   environment:
  #     - ORDERER_GENERAL_LOGLEVEL=debug
  #     - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
  #     - ORDERER_GENERAL_GENESISMETHOD=file
  #     - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/orderer/genesis.block
  #     - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
  #     - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
  #     - ORDERER_GENERAL_TLS_ENABLED=true
  #     - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
  #     - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
  #     - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
  #   command: orderer
  #   ports:
  #     - 7052:7052
  #   volumes:
  #       - ./channel-artifacts/genesis.block:/etc/hyperledger/orderer/genesis.block
  #       - ./crypto-config/ordererOrganizations/initial.com/orderers/orderer1.initial.com/:/etc/hyperledger/msp/orderer
  #       - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/:/etc/hyperledger/msp/peerOrg1
  #   networks:
  #     - basic

  peer0.org1.initial.com:
    container_name: peer0.org1.initial.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.initial.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org1.initial.com:7051
      #- CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/tls/ca.crt
      
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/tls:/etc/hyperledger/msp/tls
        - ./crypto-config/peerOrganizations/org1.initial.com/users:/etc/hyperledger/msp/users
        - ./channel-artifacts/Org1MSPanchors.tx:/etc/hyperledger/configtx/Org1MSPanchors.tx
        - ./channel-artifacts/channel.tx:/etc/hyperledger/configtx/channel.tx
    depends_on:
      - orderer0.initial.com
      #- orderer1.initial.com
    networks:
      - basic

  peer1.org1.initial.com:
    container_name: peer1.org1.initial.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org1.initial.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.org1.initial.com:7051
      #- CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/tls/ca.crt
      
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer1.org1.initial.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer1.org1.initial.com/tls:/etc/hyperledger/msp/tls
        - ./crypto-config/peerOrganizations/org1.initial.com/users:/etc/hyperledger/msp/users
        - ./channel-artifacts/Org1MSPanchors.tx:/etc/hyperledger/configtx/Org1MSPanchors.tx
        - ./channel-artifacts/channel.tx:/etc/hyperledger/configtx/channel.tx
    depends_on:
      - orderer0.initial.com
      #- orderer1.initial.com
    networks:
      - basic

  peer2.org1.initial.com:
    container_name: peer2.org1.initial.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2.org1.initial.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer2.org1.initial.com:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/tls/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer2.org1.initial.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org1.initial.com/peers/peer2.org1.initial.com/tls:/etc/hyperledger/msp/tls
        - ./crypto-config/peerOrganizations/org1.initial.com/users:/etc/hyperledger/msp/users
        - ./channel-artifacts/Org1MSPanchors.tx:/etc/hyperledger/configtx/Org1MSPanchxors.tx
        - ./channel-artifacts/channel.tx:/etc/hyperledger/configtx/channel.tx
    depends_on:
      - orderer0.initial.com
      #- orderer1.initial.com
    networks:
      - basic

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.initial.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      #- CORE_PEER_TLS_ENABLED=false #care
      
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.initial.com/peers/peer0.org1.initial.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.initial.com/users/Admin@org1.initial.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash -c './scripts/script.sh $CHANNEL_NAME; sleep 100000000000000000000000'
    volumes:
        - /var/run/:/host/var/run/
        - ./cc.go:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/cc.go
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./script.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/script.sh
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
        - orderer0.initial.com
        - peer0.org1.initial.com
        - peer1.org1.initial.com
        - peer2.org1.initial.com
    networks:
      - basic



